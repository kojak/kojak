#!/bin/bash
#
# Simple script to create tag base in Koji for a new build target
#

# Make sure to uncommet the PLATFORM tag to inherit from it when 
# creating new targets.


# Debugging
#set -x

# Declare variables
    WORKSPACE="$HOME/workspace"
    PROG="koji"
    PROD="${2}"
    ARCH="x86_64"
    REPO="centos-6-x86_64-external-repo"
    URL="http://mirror.centos.org/centos/6/os/${ARCH}/"
    JAVA=$(rpm -qa --qf "%{NAME}\n" | grep openjdk | head -1)
    MAVEN="maven3-3.0.3-4"
    PLATFORM="CENTOS-6"

if [[ ${USER} != koji ]]; then
    echo "Please execute this script as koji user " 2>&1
    exit 1
else
    create-tag-base() {
    ${PROG} add-tag ${PROD} --maven-support --include-all
    ${PROG} add-tag ${PROD}-candidate --maven-support --include-all
    ${PROG} add-tag ${PROD}-override --maven-support --include-all
    ${PROG} add-tag ${PROD}-build --arches ${ARCH} --maven-support --include-all
    ${PROG} add-tag ${PROD}-deps --maven-support --include-all

    # Configure the tag inheritance
    ${PROG} add-tag-inheritance ${PROD}-candidate ${PROD} --priority 0
    ${PROG} add-tag-inheritance ${PROD}-override ${PROD}-candidate --priority 0
    ${PROG} add-tag-inheritance ${PROD}-build ${PROD}-override --priority 0
    ${PROG} add-tag-inheritance ${PROD}-build ${PROD}-deps --priority 5
    
    # Check for PLATFORM tag
    if [ "${PROD}" != "${PLATFORM}" ]; then
        ${PROG} add-tag-inheritance ${PROD}-build ${PLATFORM}-build --priority 100
    else
        ${PROG} add-external-repo -t ${PROD}-build ${REPO} ${URL}
    fi

    # Add target
    ${PROG} add-target ${PROD}-candidate ${PROD}-build ${PROD}-candidate

    # Add groups
    # build
    ${PROG} add-group ${PROD}-build build
    ${PROG} add-group-pkg ${PROD}-build build bash bzip2 cpio diffutils redhat-release findutils gawk gcc gcc-c++ info make redhat-rpm-config rpm-build sed shadow-utils unzip util-linux-ng which xz

    # srpm-build
    ${PROG} add-group ${PROD}-build srpm-build
    ${PROG} add-group-pkg ${PROD}-build srpm-build bash curl cvs redhat-release fedpkg gnupg2 make redhat-rpm-config rpm-build shadow-utils

    # appliance-build
    ${PROG} add-group ${PROD}-build appliance-build
    ${PROG} add-group-pkg ${PROD}-build appliance-build appliance-tools bash coreutils grub parted perl policycoreutils selinux-policy shadow-utils

    # maven-build
    ${PROG} add-group ${PROD}-build maven-build
    ${PROG} add-group-pkg ${PROD}-build maven-build bash coreutils java-1.7.0-openjdk-devel maven3 subversion liberation-sans-fonts liberation-serif-fonts liberation-mono-fonts git

    # livecd-build
    ${PROG} add-group ${PROD}-build livecd-build
    ${PROG} add-group-pkg ${PROD}-build livecd-build bash bzip2 coreutils cpio diffutils redhat-logos redhat-release findutils gawk gcc gcc-c++ grep gzip info livecd-tools make patch policycoreutils python-dbus redhat-rpm-config rpm-build sed selinux-policy-targeted shadow-utils squashfs-tools tar unzip util-linux which yum

    # wrapper-build
    ${PROG} add-group ${PROD}-build wrapper-rpm-build
    ${PROG} add-group-pkg ${PROD}-build wrapper-rpm-build bash redhat-release redhat-release-server redhat-rpm-config rpm-build shadow-utils

    # Add required build packages
    ${PROG} add-pkg --owner=kojiadmin ${PROD} bash binutils

    # Lock the build tag
    #${PROG} lock-tag --master ${PROD}-build

    # Install Maven
    MVNRPM=$(rpm -q maven3)
    if [ ! -z "${MVNRPM}" ]; then
        echo -e "${MVNRPM} already installed"
    else
        yum -y localinstall ${WORKSPACE}/kojak/pkgs/${MAVEN}.noarch.rpm
    fi

    # Import Maven
    MVNPKG=$(koji search package maven3)
    if [[ ! -z "${MVNPKG}" ]]; then 
        echo "Maven already imported";
    else
        # Adding Maven
        if [ -d "${WORKSPACE}/kojak" ]; then
            ${PROG} import --create-build /home/koji/kojak/pkgs/${MAVEN}.src.rpm /home/koji/kojak/pkgs/${MAVEN}.noarch.rpm
            ${PROG} add-pkg --owner=kojiadmin ${PROD} maven3
            ${PROG} tag-build ${PROD}-candidate ${MAVEN}
        else
            git clone https://github.com/sbadakhc/kojak.git /home/koji/kojak
            ${PROG} import --create-build /home/koji/kojak/pkgs/${MAVEN}.src.rpm /home/koji/kojak/pkgs/${MAVEN}.noarch.rpm
            ${PROG} add-pkg --owner=kojiadmin ${PROD} maven3
            ${PROG} tag-build ${PROD}-candidate ${MAVEN}
        fi

    fi
    }
fi

read -d '' USAGE <<- EOF
Usage: create_target [options] <user input> 
-h, --help            show this help message and exit 
-p, --package         prompt user for package name
EOF

if [[ $# < 2 ]]; then echo "${USAGE}"; fi
while [[ $# > 1 ]]; do OPTS="$1"; shift

case $OPTS in
    -p|--package)
    PROD="$1"
    echo "Creating tag base for $1"
    create-tag-base
    shift
    ;;
    -h|--help)
    echo "Help options include"
    shift
    ;;
    *)
    echo "${USAGE}" # unknown option
    ;;
    \?)
    echo "${USAGE} option" # unknown option
    ;;
esac
done
